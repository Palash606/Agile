-- 1 -- To find out which customers have not placed any orders;
-- select c.CustomerID, c.FirstName, c.LastName 
-- from customers c
-- left join orders o on c.CustomerID = o.CustomerID
-- where o.OrderId is null;

-- 2 -- To find the total number of products available for sale
-- select sum(QuantityInStock) as total_available_products
-- from inventory;

-- 3 -- To calculate the total revenue generated by TechShop.  
-- select sum(TotalAmount) As total_revenue
-- from Orders;

-- 4 -- To calculate the average quantity ordered for products in a specific category. 
-- SELECT AVG(Quantity) AS AverageQuantityOrdered
-- FROM OrderDetails
-- WHERE ProductID IN (
--     SELECT ProductID
--     FROM Products
--     WHERE Category = 'Mobile Phone'
-- );

-- 5 --  to calculate the total revenue generated by a specific customer
-- SELECT SUM(TotalAmount) AS TotalRevenue
-- FROM Orders
-- WHERE CustomerID = 2;

-- 6 -- to find the customers who have placed the most orders
-- SELECT c.CustomerID, c.FirstName, c.LastName, COUNT(o.OrderID) AS TotalOrders
-- FROM Customers c
-- JOIN Orders o ON c.CustomerID = o.CustomerID
-- GROUP BY c.CustomerID, c.FirstName, c.LastName
-- ORDER BY TotalOrders DESC
-- LIMIT 1;

-- 7 --  to find the most popular product category, which is the one with the highest total quantity ordered across all orders
-- SELECT Category, SUM(od.Quantity) AS TotalQuantityOrdered
-- FROM Products p
-- JOIN OrderDetails od ON p.ProductID = od.ProductID
-- GROUP BY p.Category
-- ORDER BY TotalQuantityOrdered DESC
-- LIMIT 1;

-- 8 --  to find the customer who has spent the most money (highest total revenue) on electronic gadgets. List their name and total spending.
-- SELECT c.CustomerID, c.FirstName, c.LastName, SUM(od.Quantity * p.Price) AS TotalSpending
-- FROM Customers c
-- JOIN Orders o ON c.CustomerID = o.CustomerID
-- JOIN OrderDetails od ON o.OrderID = od.OrderID
-- JOIN Products p ON od.ProductID = p.ProductID
-- GROUP BY c.CustomerID, c.FirstName, c.LastName
-- ORDER BY TotalSpending DESC
-- LIMIT 1;

-- 9 --  to calculate the average order value for all customers. 
SELECT c.CustomerID, c.FirstName, c.LastName, AVG(o.TotalAmount) AS AverageOrderValue
FROM Customers c
JOIN Orders o ON c.CustomerID = o.CustomerID
GROUP BY c.CustomerID, c.FirstName, c.LastName;

-- 10 --  to find the total number of orders placed by each customer and list their names along with the order count.
-- SELECT c.CustomerID, c.FirstName, c.LastName, COUNT(o.OrderID) AS OrderCount
-- FROM Customers c
-- JOIN Orders o ON c.CustomerID = o.CustomerID
-- GROUP BY c.CustomerID, c.FirstName, c.LastName;




